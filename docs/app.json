[{"name":"app.R","content":"library(shiny)\r\nlibrary(bslib)\r\nlibrary(dplyr)\r\nlibrary(gt)\r\nlibrary(rlang)\r\nlibrary(bsicons)\r\nlibrary(lubridate)\r\n\r\nrandom_names <- babynames::babynames |>\r\n  filter(year == 2010) |>\r\n  pull(name) |> sample(size = 15)\r\n\r\nsecret_santa_randomizer <-\r\n  \\(participants, additional_criteria = NULL) {\r\n    giver <- participants\r\n    \r\n    recipients <- giver\r\n    \r\n    data <- tibble(giver = giver,\r\n                   recipients = recipients)\r\n    \r\n    i <- 0\r\n    \r\n    condition <- TRUE\r\n    \r\n    expr({\r\n      while (condition) {\r\n        i <- i + 1\r\n        data <- tibble(giver = sample(giver),\r\n                       recipients = sample(recipients)) |>\r\n          mutate(results = paste0(giver, \" -> \", recipients))\r\n        \r\n        condition <- any(data$giver == data$recipients) | any(data$results %in% additional_criteria)\r\n        \r\n      }\r\n      \r\n    }) |> eval()\r\n    \r\n    data <- data |> \r\n      mutate(\r\n        text = glue::glue(\"{giver} will be giving a gift to {recipients}.\"))\r\n    \r\n    tibble::lst(data,\r\n                i)\r\n    \r\n  }\r\n\r\n\r\n# t <- secret_santa_randomizer(random_names)\r\n\r\nif(Sys.Date() > mdy(paste0('12-25', year(Sys.Date())))) {\r\n  \r\n  days_until_next_christmas <- \\(year = year(Sys.Date())) {\r\n    \r\n    mdy(paste0('12/25/', year + 1)) - Sys.Date()\r\n    \r\n  }\r\n  \r\n} else {\r\n  \r\n  days_until_next_christmas <- \\(year = year(Sys.Date())) {\r\n    \r\n    mdy(paste0('12/25/', year)) - Sys.Date()\r\n    \r\n  }\r\n}\r\n\r\ncountdown <- days_until_next_christmas(year = year(Sys.Date()))\r\n\r\nvbs <- list(\r\n  value_box(\r\n    title = 'Number of Iterations',\r\n    value = textOutput('iterations'),\r\n    showcase = bs_icon(\"sort-up\"),\r\n    height = 150,\r\n    theme_color = 'primary'\r\n  ),\r\n  value_box(\r\n    title = 'Total Participants',\r\n    value = textOutput('participants'),\r\n    showcase = bs_icon(\"people-fill\"),\r\n    height = 150,\r\n    theme_color = 'danger'\r\n  ),\r\n  value_box(\r\n    title = 'Days Until Christmas',\r\n    value = h3(countdown),\r\n    showcase = bs_icon(\"calendar-date\"),\r\n    height = 150,\r\n    theme_color = 'success'\r\n  )\r\n  \r\n)\r\n\r\nui <- bslib::page_sidebar(\r\n  theme = bslib::bs_theme(version = 5, bootswatch = \"simplex\"),\r\n  title = \"Secret Santa Randomizer\",\r\n  fillable = FALSE,\r\n  sidebar = sidebar(\r\n    open = 'open',\r\n    width = '300px',\r\n    selectizeInput(\r\n      inputId = \"participants\",\r\n      label = tooltip(list(h4(\"Secret Santa Participants\"), bs_icon(\"info-circle\")), \"Please add the participant names to the list for radomization\"),\r\n      choices = random_names,\r\n      selected = random_names,\r\n      options = list(create = TRUE),\r\n      multiple = TRUE\r\n    ),\r\n    selectizeInput(\r\n      inputId = \"additional_criteria\",\r\n      label = tooltip(list(h4(\"Randomization Exclusion Rules\"), bs_icon(\"info-circle\")), \"Please add any additional exclusion rules to the list for radomization (e.g. 'John -> Mary'). This will add the rule to prevent John from matching with Mary for Secret Santa. Rules are structured as 'Giver -> Recipient'. The randomizer will continue to run until all rules are satisfied.\"),\r\n      choices = NULL,\r\n      options = list(create = TRUE, placeholder = \"e.g. John -> Mary\"),\r\n      multiple = TRUE\r\n    ),\r\n    actionButton(\r\n      inputId = \"randomize\",\r\n      label = \"Randomize\"\r\n    )\r\n  ),\r\n  layout_column_wrap(!!!vbs, width = '250px'),\r\n  card(\r\n    card_header(\"Participants\",\r\n                status = \"primary\"),\r\n    card_body(\r\n      gt::gt_output(\"res\")),\r\n    fill = TRUE\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n\r\n  results <- eventReactive(input$randomize, {\r\n\r\n    secret_santa_randomizer(input$participants, input$additional_criteria)\r\n    \r\n  })\r\n\r\n  output$res <- gt::render_gt({\r\n    \r\n    results()$data |> \r\n      gt() |> \r\n      cols_hide(columns = c(giver, recipients)) |>\r\n      cols_align(align = \"left\", columns = c(text, results)) |>\r\n      opt_interactive(use_compact_mode = TRUE,\r\n                      page_size_default = 15) |> \r\n      cols_label(giver = \"Giver\",\r\n                 recipients = \"Recipients\",\r\n                 results = \"Results\",\r\n                 text = 'Summary')\r\n    \r\n  })\r\n  \r\n  output$iterations <- renderText({\r\n    \r\n    results()$i\r\n      \r\n  })\r\n  \r\n  output$participants <- renderText({\r\n    \r\n    length(input$participants)\r\n    \r\n  })\r\n  \r\n}\r\n\r\nshinyApp(ui, server)","type":"text"}]
